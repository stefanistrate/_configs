# Set global configuration.
export EDITOR='vim'
export PATH="$HOME/bin:$HOME/opt/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin"
export LD_LIBRARY_PATH=$HOME/opt/lib:$LD_LIBRARY_PATH
export MANPATH=$HOME/opt/share/man:$MANPATH
export TERM='xterm-256color'
export ZSH=~/.oh-my-zsh

# Display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS=true

# Use hyphen-insensitive completion. _ and - will be interchangeable.
HYPHEN_INSENSITIVE=true

# Do not throw any error if a pattern for filename generation has no matches.
unsetopt NOMATCH

# Set theme and configure prompt segments.
ZSH_THEME='bullet-train'
BULLETTRAIN_PROMPT_ORDER=(
  time
  status
  custom
  dir
  perl
  ruby
  virtualenv
  go
  elixir
  git
  hg
  cmd_exec_time
)
BULLETTRAIN_TIME_BG=241
BULLETTRAIN_TIME_FG=254

# Set plugins to load.
plugins=(
  common-aliases  # aliases for common Unix utilities
  copyfile  # copy file to system-wide clipboard
  osx  # access OS X applications from terminal
  python  # pyfind, pyclean, pygrep
)

# Load oh-my-zsh.
source $ZSH/oh-my-zsh.sh

# Set colors for the GNU ls utility and for zsh completion.
case "$OSTYPE" in
  darwin*)
    eval `gdircolors ~/.dircolors`
    alias ls='gls -F --color=auto'
    ;;
  linux*)
    eval `dircolors ~/.dircolors`
    alias ls='ls -F --color=auto'
    ;;
esac
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}

# Set additional aliases.
alias ws='cd ~/workspace'

# Map various keys to custom functionality.
autoload history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
zmodload zsh/terminfo
bindkey "$terminfo[kent]" accept-line  # keypad Enter
bindkey "$terminfo[kcuu1]" history-beginning-search-backward-end  # Up arrow
bindkey "$terminfo[kcud1]" history-beginning-search-forward-end  # Down arrow
bindkey "^[[1~" beginning-of-line  # Fn + Left arrow
bindkey "^[[4~" end-of-line  # Fn + Right arrow

# Enable local settings, which override general settings.
if [ -f ~/.zshrc.local ]; then
  source ~/.zshrc.local
fi

# Attach to an existing tmux session or start a new one.
if [ "$TERM_PROGRAM" != "vscode" ]; then
  if which tmux &>/dev/null; then
    if [ -z "$TMUX" ]; then
      tmux has &>/dev/null
      if [ $? -eq 1 ]; then
        exec tmux new
      else
        exec tmux attach
      fi
    fi
  fi
fi
